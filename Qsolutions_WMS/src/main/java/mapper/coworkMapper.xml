<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="co.kr.qsolutions.mapper.coworkMapper">

 	
 	<!-- Login처리 -->
 	<!-- 페이징 처리를 위한  -->
 	<select id="CoworkViewListSelect" parameterType="PagingVO" resultType="CoworkVO">
		select 
			cw.userid, u.username ,c.companycode, c.companyname,cw.coworkcode, cw.coworktitle, date_format(cw.coworkdate, '%Y-%m-%d') AS coworkdate, cw.coworksubject, cw.startdate, cw.enddate
		from
			user u inner join cowork cw ON u.userid = cw.userid     
		inner join company c ON cw.coworkcompany = c.companycode
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
	       	<if test="searchType=='userid'">
	       		cw.userid like CONCAT('%',#{searchData},'%')
	       	</if>
	       	<if test="searchType=='username'">
	       		u.username like CONCAT('%',#{searchData},'%')
	       	</if>
	       	<if test="searchType=='companyname'">
	       		c.companyname like CONCAT('%',#{searchData},'%')
	       	</if>
			<if test="searchType=='coworktitle'">
				cw.coworktitle like CONCAT('%',#{searchData},'%')
			</if>
			AND cw.IsUse != 1
		</trim>
		ORDER BY
			coworkcode DESC
		Limit #{start},#{last}
	</select> 	
	
	<select id="CoworkViewListCount" parameterType="PagingVO" resultType="java.lang.Integer">
		select 
			count(*)
		from
			user u inner join cowork cw ON u.userid = cw.userid     
		inner join company c ON cw.coworkcompany = c.companycode
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
	       	<if test="searchType=='userid'">
	       		cw.userid like CONCAT('%',#{searchData},'%')
	       	</if>
	       	<if test="searchType=='username'">
	       		u.username like CONCAT('%',#{searchData},'%')
	       	</if>
	       	<if test="searchType=='companyname'">
	       		c.companyname like CONCAT('%',#{searchData},'%')
	       	</if>
			<if test="searchType=='coworktitle'">
				cw.coworktitle like CONCAT('%',#{searchData},'%')
			</if>
			AND cw.IsUse != 1
		</trim>
		order by
			coworkcode ASC
	</select>
	
	<select id="CoworkViewSelect" parameterType="CoworkDTO" resultType="CoworkVO">
			select
				cw.userid, u.username,cw.coworktext,cw.coworkcode,cw.coworktitle,date_format(cw.coworkdate, '%Y-%m-%d') AS coworkdate,c.companycode,c.companyname,cw.coworksubject,cw.startdate,cw.enddate,cw.coworkstep
			from
			user u inner join cowork cw ON u.userid = cw.userid     
			inner join company c ON cw.coworkcompany = c.companycode
		<where>
        	cw.coworkcode = #{coworkcode}
		</where>
	</select>
	
	<select id="CoworkViewListCalendar" parameterType="PagingVO" resultType="CoworkVO">
		select 
			cw.userid, u.username ,c.companycode, c.companyname,cw.coworkcode, cw.coworktitle, date_format(cw.coworkdate, '%Y-%m-%d') AS coworkdate, cw.coworksubject, cw.startdate, cw.enddate, cw.coworkstep
		from
			user u inner join cowork cw ON u.userid = cw.userid     
		inner join company c ON cw.coworkcompany = c.companycode
		WHERE cw.IsUse != 1
		ORDER BY
			coworkcode ASC
	</select> 	
	
	<select id="CoworkCalendarSelect" parameterType="CoworkDTO" resultType="CoworkVO">
			select
				cw.userid, u.username,cw.coworktext,cw.coworkcode,cw.coworktitle,date_format(cw.coworkdate, '%Y-%m-%d') AS coworkdate,c.companycode,c.companyname,cw.coworksubject,cw.startdate,cw.enddate,cw.coworkstep
			from
			user u inner join cowork cw ON u.userid = cw.userid     
			inner join company c ON cw.coworkcompany = c.companycode
		<where>
        	cw.coworkcode = #{coworkcode}
		</where>
	</select>
	
	
	<select id="CompanyAllSelect" resultType="CompanyVO">
		select 
			companycode, companyname 
		from 
			company
		where
			IsUse != 1
	</select>
	<select id="CoworkCodeSelect" resultType="String" parameterType="String">
		select max(coworkcode) from cowork
		<where>
			coworkcode like CONCAT('%',#{nowdate},'%') 
		</where>
	</select>

	<insert id="CoworkViewInsert" parameterType="CoworkDTO">
		insert into cowork
			(coworksubject,coworkcode,coworktitle,coworktext,coworkcompany,userid,startdate,enddate,coworkstep) 
		value 
			(#{coworksubject},#{coworkcode},#{coworktitle},#{coworktext},#{companycode},#{userid},#{startdate},#{enddate},#{coworkstep});
	</insert>	
	<update id="CoworkViewUpdate" parameterType="CoworkDTO">
		update 
			cowork 
		set
			coworksubject = #{coworksubject}, coworktitle = #{coworktitle}, coworktext = #{coworktext}, startdate = #{startdate}, enddate = #{enddate}, coworkstep = #{coworkstep}
		<where>
			coworkcode = #{coworkcode} 
		</where>
	</update>
	
	<update id="CoworkViewDelete" parameterType="CoworkDTO">
		update
			cowork
		set
			IsUse = 1
		<where>
			coworkcode = #{coworkcode}		
		</where>
	</update>
	<select id="SubCoworkListSelect" resultType="SubCoworkVO" parameterType="CoworkDTO">
		select
			sc.subcoworkcode, sc.subcoworkdate, sc.subcoworktext, sc.coworkcode,u.userid,u.username, sc.IsUse 
		from 
			subcowork sc left join user u ON sc.userid = u.userid
		<where>
			coworkcode = #{coworkcode} and sc.IsUse = 0
		</where>
		order by subcoworkcode desc;
	</select>
	<select id="SubCoworkCount" resultType="Integer" parameterType="CoworkDTO">
		select
			count(*)
		from 
			subcowork sc left join user u ON sc.userid = u.userid
		where
			coworkcode = #{coworkcode} and sc.IsUse = 0;
	</select>
	<insert id="SubCoworkListInsert" parameterType="SubCoworkDTO">
		Insert into subcowork
			(subcoworkdate,subcoworktext,coworkcode,userid)
		value
			(NOW(),#{subcoworktext},#{coworkcode},#{userid})
	</insert>
	<update id ="SubCoworkListUpdate" parameterType="SubCoworkDTO">
		update
			subcowork
		set
			subcoworkdate = now(),subcoworktext = #{subcoworktext}
		where
			coworkcode = #{coworkcode} and subcoworkcode = #{subcoworkcode}
	</update>
	<update id ="SubCoworkListDelete" parameterType="SubCoworkDTO">
		update
			subcowork
		set
			IsUse = 1
		where
			coworkcode = #{coworkcode} and subcoworkcode = #{subcoworkcode}
	</update>
	
	<select id="SelectCoworkCode" resultType="String">
		select MAX(coworkcode) from cowork
	</select>
	
	<select id="SelectCoworkUser" resultType="UserVO" parameterType="CompanyDTO">
		select distinct
			u.userid, u.username, u.usermobile, u.useremail, u.usercompanycode, c.companyname, u.positioncode, p.positionname
		from 
			user u inner join usercoworkcompany ucc ON u.userid = ucc.userid
		    <!-- inner join company c ON uc.companycode = c.companycode -->
		    left join company c ON u.usercompanycode = c.companycode
		    left join positions p ON u.positioncode = p.positioncode
		where
			ucc.coworkcode = #{coworkcode}
	</select>
	
	<select id="SelectCoworkManager" resultType="UserVO" parameterType="CompanyDTO">
		select 
			u.userid, u.username, u.usermobile, u.useremail, ucc.companycode, u.positioncode, p.positionname
		from 
			user u 
            inner join usercoworkcompany ucc ON u.userid = ucc.userid
		    inner join cowork cw ON ucc.coworkcode = cw.coworkcode
		    left join positions p ON u.positioncode = p.positioncode
		    left join company c ON u.usercompanycode = c.companycode
		where
			ucc.coworkcode = #{coworkcode}
	</select>
	
	<insert id="InsertCoworkManager" parameterType="CoworkDTO">
		insert into usercoworkcompany
			(userid, coworkcode, companycode)
		select
			#{userid},#{coworkcode},#{companycode}
		from dual
		where not exists
			(select * from usercoworkcompany where userid = #{userid} and coworkcode = #{coworkcode})
	
	</insert>
	
	<delete id="DeleteCoworkManager" parameterType="CoworkDTO">
		delete from usercoworkcompany
		where 
			userid=#{userid} and coworkcode=#{coworkcode};
	</delete>
	
	<select id ="CoworkMyList" parameterType="CoworkDTO" resultType="CoworkVO">
		select distinct
			cw.userid, u.username ,c.companycode, c.companyname,cw.coworkcode, cw.coworktitle, date_format(cw.coworkdate, '%Y-%m-%d') AS coworkdate, cw.coworksubject, cw.startdate, cw.enddate, cw.coworkstep, ucc.userid
		from
			cowork cw inner join user u ON cw.userid = u.userid
			inner join company c ON cw.coworkcompany = c.companycode
			inner join usercoworkcompany ucc ON ucc.coworkcode = cw.coworkcode
		where
			ucc.userid = #{userid}
			and cw.IsUse = 0
		order by coworkcode desc
		limit 5;
	</select>
	
	<select id="SubCoworkDashboardList" resultType="SubCoworkVO" parameterType="CoworkDTO">
		select
			sc.subcoworkcode, date_format(sc.subcoworkdate, '%Y-%m-%d'), sc.subcoworktext, sc.coworkcode,u.userid,u.username, c.companyname, co.coworktitle, sc.IsUse, c.companycode
		from 
			subcowork sc left join user u ON sc.userid = u.userid
		    inner join cowork co ON sc.coworkcode = co.coworkcode
		    inner join company c ON co.coworkcompany = c.companycode
		where
			date_format(sc.subcoworkdate, '%Y-%m-%d') >= date_add(NOW(), INTERVAL -5 DAY)
			and co.IsUse = 0
		order by subcoworkcode desc
		limit 5;
	</select>
	
	<select id="CoworkDashboardList" resultType="CoworkVO" parameterType="CoworkDTO">
		select distinct
			cw.userid, u.username ,c.companycode, c.companyname,cw.coworkcode, cw.coworktitle, date_format(cw.coworkdate, '%Y-%m-%d') AS coworkdate, cw.coworksubject, cw.startdate, cw.enddate, cw.coworkstep
		from
			cowork cw inner join user u ON cw.userid = u.userid
			inner join company c ON cw.coworkcompany = c.companycode
		where
			date_format(cw.coworkdate, '%Y-%m-%d') >= date_add(NOW(), INTERVAL -5 DAY)
			and cw.IsUse = 0
		order by coworkcode desc
		limit 5;
	</select>
	
	<select id="CountTodayCowork" resultType="Integer" parameterType="CoworkDTO">
		SELECT 
			count(*)
		FROM
			cowork co inner join usercoworkcompany ucc ON co.coworkcode = ucc.coworkcode
		WHERE
			ucc.userid = #{userid} and
			date_format(now(), '%Y-%m-%d') between date_format(co.startdate, '%Y-%m-%d') and date_format(co.enddate, '%Y-%m-%d')
			AND IsUse != 1;
 	</select>
 	
 	<select id="InsertCoworkLast" resultType="CoworkVO">
 		SELECT
			coworkcode, coworkcompany AS companycode
		FROM
			cowork
		ORDER BY
			coworkcode DESC
		LIMIT
			1;
 	</select>
 	
 	<insert id ="insertKeyWordCnt" parameterType="java.util.HashMap">
	<foreach item="item" collection="list">
	  INSERT INTO SERVER_CUN_SUM (t_seq, k_seq, s_total_count, s_unique_count)
	  VALUES (${item.t_seq}, #{item.k_seq}, #{item.s_total_count}, #{item.s_unique_count})</foreach>
	</insert>
	
</mapper>
